[2023-12-15 13:31:48,485] [org.hibernate.validator.internal.util.Version] [background-preinit] [21] [INFO ] HV000001: Hibernate Validator 8.0.0.Final
[2023-12-15 13:31:48,509] [org.springframework.boot.StartupInfoLogger] [main] [51] [INFO ] Starting MiniSplitwiseApplicationTests using Java 17.0.8 with PID 96425 (started by chinthanchandra in /Users/chinthanchandra/Desktop/IIITB/4th_Year/sem7/spe/SPE-Major-Project/SPE-MajorProject-Splitwise/MiniSplitwise)
[2023-12-15 13:31:48,509] [org.springframework.boot.StartupInfoLogger] [main] [52] [DEBUG] Running with Spring Boot v3.1.5, Spring v6.0.13
[2023-12-15 13:31:48,510] [org.springframework.boot.SpringApplication] [main] [638] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2023-12-15 13:31:48,852] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [138] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2023-12-15 13:31:48,884] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [208] [INFO ] Finished Spring Data repository scanning in 23 ms. Found 4 JPA repository interfaces.
[2023-12-15 13:31:49,154] [org.hibernate.jpa.internal.util.LogHelper] [main] [31] [INFO ] HHH000204: Processing PersistenceUnitInfo [name: default]
[2023-12-15 13:31:49,179] [org.hibernate.Version] [main] [44] [INFO ] HHH000412: Hibernate ORM core version 6.1.7.Final
[2023-12-15 13:31:49,317] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2023-12-15 13:31:49,412] [com.zaxxer.hikari.pool.HikariPool] [main] [565] [INFO ] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@70f4f89e
[2023-12-15 13:31:49,413] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2023-12-15 13:31:49,461] [org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl] [main] [66] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2023-12-15 13:31:49,876] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [main] [51] [INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2023-12-15 13:31:49,881] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [437] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2023-12-15 13:31:49,996] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [main] [47] [INFO ] Hibernate is in classpath; If applicable, HQL parser will be used.
[2023-12-15 13:31:50,188] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [main] [231] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2023-12-15 13:31:50,427] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [54] [INFO ] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@318f47f1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@900ffc4, org.springframework.security.web.context.SecurityContextHolderFilter@7040d71, org.springframework.security.web.header.HeaderWriterFilter@2c34ce24, org.springframework.web.filter.CorsFilter@39d44217, org.springframework.security.web.authentication.logout.LogoutFilter@2438a038, com.example.MiniSplitwise.config.JwtAuthenticationFilter@4c51fc9a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2a8081f5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@137a9d69, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3280a79a, org.springframework.security.web.session.SessionManagementFilter@5a6f1342, org.springframework.security.web.access.ExceptionTranslationFilter@56c7e2d1, org.springframework.security.web.access.intercept.AuthorizationFilter@63bb719d]
[2023-12-15 13:31:50,604] [org.springframework.mock.web.MockServletContext] [main] [435] [INFO ] Initializing Spring TestDispatcherServlet ''
[2023-12-15 13:31:50,604] [org.springframework.web.servlet.FrameworkServlet] [main] [532] [INFO ] Initializing Servlet ''
[2023-12-15 13:31:50,605] [org.springframework.web.servlet.FrameworkServlet] [main] [554] [INFO ] Completed initialization in 1 ms
[2023-12-15 13:31:50,615] [org.springframework.boot.StartupInfoLogger] [main] [57] [INFO ] Started MiniSplitwiseApplicationTests in 2.254 seconds (process running for 2.787)
[2023-12-15 13:31:51,270] [com.example.MiniSplitwise.controller.PersonalBillController] [main] [44] [INFO ] Finding bill by Id
[2023-12-15 13:31:51,296] [com.example.MiniSplitwise.controller.UserController] [main] [30] [INFO ] Return all users
[2023-12-15 13:31:51,304] [com.example.MiniSplitwise.controller.PersonalBillController] [main] [55] [INFO ] Finding Bills by User
[2023-12-15 13:31:51,329] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [SpringApplicationShutdownHook] [650] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2023-12-15 13:31:51,331] [com.zaxxer.hikari.HikariDataSource] [SpringApplicationShutdownHook] [350] [INFO ] HikariPool-1 - Shutdown initiated...
[2023-12-15 13:31:51,333] [com.zaxxer.hikari.HikariDataSource] [SpringApplicationShutdownHook] [352] [INFO ] HikariPool-1 - Shutdown completed.
[2023-12-15 13:32:06,670] [org.hibernate.validator.internal.util.Version] [background-preinit] [21] [INFO ] HV000001: Hibernate Validator 8.0.0.Final
[2023-12-15 13:32:06,684] [org.springframework.boot.StartupInfoLogger] [main] [51] [INFO ] Starting MiniSplitwiseApplication using Java 17.0.8 with PID 96475 (/Users/chinthanchandra/Desktop/IIITB/4th_Year/sem7/spe/SPE-Major-Project/SPE-MajorProject-Splitwise/MiniSplitwise/target/classes started by chinthanchandra in /Users/chinthanchandra/Desktop/IIITB/4th_Year/sem7/spe/SPE-Major-Project/SPE-MajorProject-Splitwise/MiniSplitwise)
[2023-12-15 13:32:06,684] [org.springframework.boot.StartupInfoLogger] [main] [52] [DEBUG] Running with Spring Boot v3.1.5, Spring v6.0.13
[2023-12-15 13:32:06,685] [org.springframework.boot.SpringApplication] [main] [638] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2023-12-15 13:32:06,917] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [138] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2023-12-15 13:32:06,941] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [208] [INFO ] Finished Spring Data repository scanning in 21 ms. Found 4 JPA repository interfaces.
[2023-12-15 13:32:07,141] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2023-12-15 13:32:07,145] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2023-12-15 13:32:07,146] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2023-12-15 13:32:07,146] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/10.1.15]
[2023-12-15 13:32:07,182] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2023-12-15 13:32:07,182] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [291] [INFO ] Root WebApplicationContext: initialization completed in 482 ms
[2023-12-15 13:32:07,232] [org.hibernate.jpa.internal.util.LogHelper] [main] [31] [INFO ] HHH000204: Processing PersistenceUnitInfo [name: default]
[2023-12-15 13:32:07,249] [org.hibernate.Version] [main] [44] [INFO ] HHH000412: Hibernate ORM core version 6.1.7.Final
[2023-12-15 13:32:07,350] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2023-12-15 13:32:07,420] [com.zaxxer.hikari.pool.HikariPool] [main] [565] [INFO ] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@8eb6f9a
[2023-12-15 13:32:07,420] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2023-12-15 13:32:07,438] [org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl] [main] [66] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2023-12-15 13:32:07,771] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [main] [51] [INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2023-12-15 13:32:07,779] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [437] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2023-12-15 13:32:07,865] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [main] [47] [INFO ] Hibernate is in classpath; If applicable, HQL parser will be used.
[2023-12-15 13:32:08,006] [org.springframework.web.filter.GenericFilterBean] [main] [240] [DEBUG] Filter 'jwtAuthenticationFilter' configured for use
[2023-12-15 13:32:08,027] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [main] [231] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2023-12-15 13:32:08,190] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [54] [INFO ] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7896e96a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e451f9a, org.springframework.security.web.context.SecurityContextHolderFilter@2a22e7e2, org.springframework.security.web.header.HeaderWriterFilter@3d84f113, org.springframework.web.filter.CorsFilter@7828bc6b, org.springframework.security.web.authentication.logout.LogoutFilter@712dd0b0, com.example.MiniSplitwise.config.JwtAuthenticationFilter@80b70fd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5799b8a2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c4c32ff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2f59cb6f, org.springframework.security.web.session.SessionManagementFilter@779cda39, org.springframework.security.web.access.ExceptionTranslationFilter@30b0d5a7, org.springframework.security.web.access.intercept.AuthorizationFilter@186fc6e]
[2023-12-15 13:32:08,254] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["http-nio-8081"]
[2023-12-15 13:32:08,262] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [220] [INFO ] Tomcat started on port(s): 8081 (http) with context path ''
[2023-12-15 13:32:08,267] [org.springframework.boot.StartupInfoLogger] [main] [57] [INFO ] Started MiniSplitwiseApplication in 1.699 seconds (process running for 1.901)
[2023-12-15 13:32:08,268] [com.example.MiniSplitwise.MiniSplitwiseApplication] [main] [15] [INFO ] Running Splitwise
[2023-12-15 13:33:18,377] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-1] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-12-15 13:33:18,377] [org.springframework.web.servlet.FrameworkServlet] [http-nio-8081-exec-1] [532] [INFO ] Initializing Servlet 'dispatcherServlet'
[2023-12-15 13:33:18,380] [org.springframework.web.servlet.FrameworkServlet] [http-nio-8081-exec-1] [554] [INFO ] Completed initialization in 2 ms
[2023-12-15 13:33:18,594] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [http-nio-8081-exec-2] [133] [WARN ] SQL Error: 0, SQLState: 23505
[2023-12-15 13:33:18,595] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [http-nio-8081-exec-2] [138] [ERROR] ERROR: duplicate key value violates unique constraint "uk_euxuge3yhuc3vyces3bhsjvvf"
  Detail: Key (personal_email)=(test@gmail.com) already exists.
[2023-12-15 13:33:18,595] [org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl] [http-nio-8081-exec-2] [213] [INFO ] HHH000010: On release of batch it still contained JDBC statements
[2023-12-15 13:33:18,601] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-2] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [uk_euxuge3yhuc3vyces3bhsjvvf]] with root cause
org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "uk_euxuge3yhuc3vyces3bhsjvvf"
  Detail: Key (personal_email)=(test@gmail.com) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:39)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3438)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:4073)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:103)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:612)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:483)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:480)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:329)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1425)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:477)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2234)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1930)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy2/jdk.proxy2.$Proxy114.save(Unknown Source)
	at com.example.MiniSplitwise.utils.AuthenticationService.register(AuthenticationService.java:48)
	at com.example.MiniSplitwise.controller.AuthenticationController.register(AuthenticationController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.MiniSplitwise.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2023-12-15 13:33:29,839] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [http-nio-8081-exec-4] [133] [WARN ] SQL Error: 0, SQLState: 23505
[2023-12-15 13:33:29,840] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [http-nio-8081-exec-4] [138] [ERROR] ERROR: duplicate key value violates unique constraint "uk_euxuge3yhuc3vyces3bhsjvvf"
  Detail: Key (personal_email)=(test@gmail.com) already exists.
[2023-12-15 13:33:29,840] [org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl] [http-nio-8081-exec-4] [213] [INFO ] HHH000010: On release of batch it still contained JDBC statements
[2023-12-15 13:33:29,841] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-4] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [uk_euxuge3yhuc3vyces3bhsjvvf]] with root cause
org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "uk_euxuge3yhuc3vyces3bhsjvvf"
  Detail: Key (personal_email)=(test@gmail.com) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:39)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3438)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:4073)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:103)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:612)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:483)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:480)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:329)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1425)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:477)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2234)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1930)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy2/jdk.proxy2.$Proxy114.save(Unknown Source)
	at com.example.MiniSplitwise.utils.AuthenticationService.register(AuthenticationService.java:48)
	at com.example.MiniSplitwise.controller.AuthenticationController.register(AuthenticationController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.MiniSplitwise.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2023-12-15 13:34:11,087] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-1] [24] [INFO ] Generating Token
[2023-12-15 13:34:11,202] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-1] [24] [INFO ] Generating Token
[2023-12-15 13:34:11,203] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-1] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 13:34:11,214] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-1] [55] [INFO ] Finding Bills by User
[2023-12-15 13:34:11,218] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-1] [37] [INFO ] Finding bills by user ID
[2023-12-15 13:34:11,236] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 13:34:11,239] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 13:34:11,241] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-2] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 13:34:11,242] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-2] [55] [INFO ] Finding Bills by User
[2023-12-15 13:34:11,245] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-2] [37] [INFO ] Finding bills by user ID
[2023-12-15 13:36:35,009] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-7] [24] [INFO ] Generating Token
[2023-12-15 13:36:35,024] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-7] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.MiniSplitwise.config.JwtService.extractAllClaims(JwtService.java:48)
	at com.example.MiniSplitwise.config.JwtService.extractClaim(JwtService.java:52)
	at com.example.MiniSplitwise.config.JwtService.extractCollegeEmail(JwtService.java:25)
	at com.example.MiniSplitwise.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2023-12-15 13:36:35,213] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 13:36:35,216] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-8] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.MiniSplitwise.config.JwtService.extractAllClaims(JwtService.java:48)
	at com.example.MiniSplitwise.config.JwtService.extractClaim(JwtService.java:52)
	at com.example.MiniSplitwise.config.JwtService.extractCollegeEmail(JwtService.java:25)
	at com.example.MiniSplitwise.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2023-12-15 13:36:50,798] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-3] [24] [INFO ] Generating Token
[2023-12-15 13:36:50,816] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-3] [24] [INFO ] Generating Token
[2023-12-15 13:36:50,818] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-3] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 13:36:50,820] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-3] [55] [INFO ] Finding Bills by User
[2023-12-15 13:36:50,822] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-3] [37] [INFO ] Finding bills by user ID
[2023-12-15 13:36:50,828] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-4] [24] [INFO ] Generating Token
[2023-12-15 13:36:50,831] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-4] [24] [INFO ] Generating Token
[2023-12-15 13:36:50,833] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-4] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 13:36:50,834] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-4] [55] [INFO ] Finding Bills by User
[2023-12-15 13:36:50,835] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-4] [37] [INFO ] Finding bills by user ID
[2023-12-15 13:42:46,012] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-7] [24] [INFO ] Generating Token
[2023-12-15 13:42:46,037] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-7] [24] [INFO ] Generating Token
[2023-12-15 13:42:46,062] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-7] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 13:42:46,073] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-7] [55] [INFO ] Finding Bills by User
[2023-12-15 13:42:46,078] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-7] [37] [INFO ] Finding bills by user ID
[2023-12-15 13:46:21,956] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-9] [24] [INFO ] Generating Token
[2023-12-15 13:46:21,999] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-9] [24] [INFO ] Generating Token
[2023-12-15 13:46:22,001] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-9] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 13:46:22,004] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-9] [55] [INFO ] Finding Bills by User
[2023-12-15 13:46:22,007] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-9] [37] [INFO ] Finding bills by user ID
[2023-12-15 13:53:17,953] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-1] [24] [INFO ] Generating Token
[2023-12-15 13:53:17,999] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-1] [24] [INFO ] Generating Token
[2023-12-15 13:53:18,004] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-1] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 13:53:18,006] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-1] [55] [INFO ] Finding Bills by User
[2023-12-15 13:53:18,009] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-1] [37] [INFO ] Finding bills by user ID
[2023-12-15 13:54:00,702] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-3] [24] [INFO ] Generating Token
[2023-12-15 13:54:00,718] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-3] [24] [INFO ] Generating Token
[2023-12-15 13:54:00,721] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-3] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 13:54:00,722] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-3] [55] [INFO ] Finding Bills by User
[2023-12-15 13:54:00,724] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-3] [37] [INFO ] Finding bills by user ID
[2023-12-15 13:54:00,737] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-4] [24] [INFO ] Generating Token
[2023-12-15 13:54:00,742] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-4] [24] [INFO ] Generating Token
[2023-12-15 13:54:00,745] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-4] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 13:54:00,746] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-4] [55] [INFO ] Finding Bills by User
[2023-12-15 13:54:00,748] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-4] [37] [INFO ] Finding bills by user ID
[2023-12-15 13:54:02,968] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-5] [24] [INFO ] Generating Token
[2023-12-15 13:54:02,979] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-5] [24] [INFO ] Generating Token
[2023-12-15 13:54:02,983] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-5] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 13:54:02,985] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-5] [55] [INFO ] Finding Bills by User
[2023-12-15 13:54:02,987] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-5] [37] [INFO ] Finding bills by user ID
[2023-12-15 13:54:46,568] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 13:54:46,590] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 13:54:46,592] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-8] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 13:54:46,594] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-8] [55] [INFO ] Finding Bills by User
[2023-12-15 13:54:46,595] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-8] [37] [INFO ] Finding bills by user ID
[2023-12-15 13:57:44,939] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-10] [24] [INFO ] Generating Token
[2023-12-15 13:57:44,959] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-10] [24] [INFO ] Generating Token
[2023-12-15 13:57:44,961] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-10] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 13:57:44,963] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-10] [55] [INFO ] Finding Bills by User
[2023-12-15 13:57:44,965] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-10] [37] [INFO ] Finding bills by user ID
[2023-12-15 13:57:59,083] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-3] [24] [INFO ] Generating Token
[2023-12-15 13:57:59,118] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-3] [24] [INFO ] Generating Token
[2023-12-15 13:57:59,123] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-3] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 13:57:59,164] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-3] [34] [INFO ] Adding personal bill
[2023-12-15 13:57:59,166] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-3] [25] [INFO ] Adding personal bills
[2023-12-15 13:58:36,196] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-5] [24] [INFO ] Generating Token
[2023-12-15 13:58:36,221] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-5] [24] [INFO ] Generating Token
[2023-12-15 13:58:36,225] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-5] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 13:58:36,226] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-5] [55] [INFO ] Finding Bills by User
[2023-12-15 13:58:36,228] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-5] [37] [INFO ] Finding bills by user ID
[2023-12-15 13:59:39,413] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-7] [24] [INFO ] Generating Token
[2023-12-15 13:59:39,439] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-7] [24] [INFO ] Generating Token
[2023-12-15 13:59:39,442] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-7] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 13:59:39,445] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-7] [55] [INFO ] Finding Bills by User
[2023-12-15 13:59:39,447] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-7] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:01:58,027] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-9] [24] [INFO ] Generating Token
[2023-12-15 14:01:58,052] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-9] [24] [INFO ] Generating Token
[2023-12-15 14:01:58,055] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-9] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:01:58,061] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-9] [55] [INFO ] Finding Bills by User
[2023-12-15 14:01:58,064] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-9] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:03:54,699] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-1] [24] [INFO ] Generating Token
[2023-12-15 14:03:54,770] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-1] [24] [INFO ] Generating Token
[2023-12-15 14:03:54,776] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-1] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:03:54,783] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-1] [55] [INFO ] Finding Bills by User
[2023-12-15 14:03:54,786] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-1] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:04:33,952] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-5] [24] [INFO ] Generating Token
[2023-12-15 14:04:33,994] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-5] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.MiniSplitwise.config.JwtService.extractAllClaims(JwtService.java:48)
	at com.example.MiniSplitwise.config.JwtService.extractClaim(JwtService.java:52)
	at com.example.MiniSplitwise.config.JwtService.extractCollegeEmail(JwtService.java:25)
	at com.example.MiniSplitwise.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2023-12-15 14:04:45,232] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 14:04:45,242] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 14:04:45,244] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-2] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:04:45,246] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-2] [55] [INFO ] Finding Bills by User
[2023-12-15 14:04:45,249] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-2] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:04:45,262] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-3] [24] [INFO ] Generating Token
[2023-12-15 14:04:45,269] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-3] [24] [INFO ] Generating Token
[2023-12-15 14:04:45,273] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-3] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:04:45,276] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-3] [55] [INFO ] Finding Bills by User
[2023-12-15 14:04:45,279] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-3] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:08:04,818] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 14:08:04,880] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 14:08:04,894] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-8] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:08:04,906] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-8] [55] [INFO ] Finding Bills by User
[2023-12-15 14:08:04,913] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-8] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:10:44,812] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-10] [24] [INFO ] Generating Token
[2023-12-15 14:10:44,821] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-10] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.io.DecodingException: Illegal base64url character: ' '
	at io.jsonwebtoken.io.Base64.ctoi(Base64.java:221)
	at io.jsonwebtoken.io.Base64.decodeFast(Base64.java:270)
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:36)
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:23)
	at io.jsonwebtoken.io.ExceptionPropagatingDecoder.decode(ExceptionPropagatingDecoder.java:36)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:288)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.MiniSplitwise.config.JwtService.extractAllClaims(JwtService.java:48)
	at com.example.MiniSplitwise.config.JwtService.extractClaim(JwtService.java:52)
	at com.example.MiniSplitwise.config.JwtService.extractCollegeEmail(JwtService.java:25)
	at com.example.MiniSplitwise.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2023-12-15 14:17:42,425] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-5] [24] [INFO ] Generating Token
[2023-12-15 14:17:42,444] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-5] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.io.DecodingException: Illegal base64url character: ' '
	at io.jsonwebtoken.io.Base64.ctoi(Base64.java:221)
	at io.jsonwebtoken.io.Base64.decodeFast(Base64.java:270)
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:36)
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:23)
	at io.jsonwebtoken.io.ExceptionPropagatingDecoder.decode(ExceptionPropagatingDecoder.java:36)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:288)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.MiniSplitwise.config.JwtService.extractAllClaims(JwtService.java:48)
	at com.example.MiniSplitwise.config.JwtService.extractClaim(JwtService.java:52)
	at com.example.MiniSplitwise.config.JwtService.extractCollegeEmail(JwtService.java:25)
	at com.example.MiniSplitwise.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2023-12-15 14:18:00,128] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [SpringApplicationShutdownHook] [650] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2023-12-15 14:18:00,148] [com.zaxxer.hikari.HikariDataSource] [SpringApplicationShutdownHook] [350] [INFO ] HikariPool-1 - Shutdown initiated...
[2023-12-15 14:18:00,152] [com.zaxxer.hikari.HikariDataSource] [SpringApplicationShutdownHook] [352] [INFO ] HikariPool-1 - Shutdown completed.
[2023-12-15 14:18:13,116] [org.hibernate.validator.internal.util.Version] [background-preinit] [21] [INFO ] HV000001: Hibernate Validator 8.0.0.Final
[2023-12-15 14:18:13,132] [org.springframework.boot.StartupInfoLogger] [main] [51] [INFO ] Starting MiniSplitwiseApplication using Java 17.0.8 with PID 98470 (/Users/chinthanchandra/Desktop/IIITB/4th_Year/sem7/spe/SPE-Major-Project/SPE-MajorProject-Splitwise/MiniSplitwise/target/classes started by chinthanchandra in /Users/chinthanchandra/Desktop/IIITB/4th_Year/sem7/spe/SPE-Major-Project/SPE-MajorProject-Splitwise/MiniSplitwise)
[2023-12-15 14:18:13,133] [org.springframework.boot.StartupInfoLogger] [main] [52] [DEBUG] Running with Spring Boot v3.1.5, Spring v6.0.13
[2023-12-15 14:18:13,133] [org.springframework.boot.SpringApplication] [main] [638] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2023-12-15 14:18:13,402] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [138] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2023-12-15 14:18:13,428] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [208] [INFO ] Finished Spring Data repository scanning in 22 ms. Found 4 JPA repository interfaces.
[2023-12-15 14:18:13,653] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2023-12-15 14:18:13,657] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2023-12-15 14:18:13,658] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2023-12-15 14:18:13,658] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/10.1.15]
[2023-12-15 14:18:13,702] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2023-12-15 14:18:13,703] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [291] [INFO ] Root WebApplicationContext: initialization completed in 552 ms
[2023-12-15 14:18:13,761] [org.hibernate.jpa.internal.util.LogHelper] [main] [31] [INFO ] HHH000204: Processing PersistenceUnitInfo [name: default]
[2023-12-15 14:18:13,787] [org.hibernate.Version] [main] [44] [INFO ] HHH000412: Hibernate ORM core version 6.1.7.Final
[2023-12-15 14:18:13,902] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2023-12-15 14:18:13,977] [com.zaxxer.hikari.pool.HikariPool] [main] [565] [INFO ] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@8eb6f9a
[2023-12-15 14:18:13,978] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2023-12-15 14:18:14,009] [org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl] [main] [66] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2023-12-15 14:18:14,376] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [main] [51] [INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2023-12-15 14:18:14,381] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [437] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2023-12-15 14:18:14,470] [org.springframework.data.jpa.repository.query.QueryEnhancerFactory] [main] [47] [INFO ] Hibernate is in classpath; If applicable, HQL parser will be used.
[2023-12-15 14:18:14,617] [org.springframework.web.filter.GenericFilterBean] [main] [240] [DEBUG] Filter 'jwtAuthenticationFilter' configured for use
[2023-12-15 14:18:14,644] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [main] [231] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2023-12-15 14:18:14,815] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [54] [INFO ] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7896e96a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e451f9a, org.springframework.security.web.context.SecurityContextHolderFilter@2a22e7e2, org.springframework.security.web.header.HeaderWriterFilter@3d84f113, org.springframework.web.filter.CorsFilter@7828bc6b, org.springframework.security.web.authentication.logout.LogoutFilter@712dd0b0, com.example.MiniSplitwise.config.JwtAuthenticationFilter@80b70fd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5799b8a2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c4c32ff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2f59cb6f, org.springframework.security.web.session.SessionManagementFilter@779cda39, org.springframework.security.web.access.ExceptionTranslationFilter@30b0d5a7, org.springframework.security.web.access.intercept.AuthorizationFilter@186fc6e]
[2023-12-15 14:18:14,880] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["http-nio-8081"]
[2023-12-15 14:18:14,888] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [220] [INFO ] Tomcat started on port(s): 8081 (http) with context path ''
[2023-12-15 14:18:14,892] [org.springframework.boot.StartupInfoLogger] [main] [57] [INFO ] Started MiniSplitwiseApplication in 1.889 seconds (process running for 2.092)
[2023-12-15 14:18:14,893] [com.example.MiniSplitwise.MiniSplitwiseApplication] [main] [15] [INFO ] Running Splitwise
[2023-12-15 14:18:47,400] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-1] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-12-15 14:18:47,401] [org.springframework.web.servlet.FrameworkServlet] [http-nio-8081-exec-1] [532] [INFO ] Initializing Servlet 'dispatcherServlet'
[2023-12-15 14:18:47,404] [org.springframework.web.servlet.FrameworkServlet] [http-nio-8081-exec-1] [554] [INFO ] Completed initialization in 3 ms
[2023-12-15 14:18:53,260] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-3] [24] [INFO ] Generating Token
[2023-12-15 14:18:53,335] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-3] [24] [INFO ] Generating Token
[2023-12-15 14:18:53,337] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-3] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:18:53,344] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-3] [55] [INFO ] Finding Bills by User
[2023-12-15 14:18:53,346] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-3] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:18:53,361] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-4] [24] [INFO ] Generating Token
[2023-12-15 14:18:53,365] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-4] [24] [INFO ] Generating Token
[2023-12-15 14:18:53,367] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-4] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:18:53,369] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-4] [55] [INFO ] Finding Bills by User
[2023-12-15 14:18:53,371] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-4] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:19:17,530] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 14:19:17,549] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 14:19:17,553] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-2] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:19:17,573] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-2] [68] [INFO ] Updating user by id
[2023-12-15 14:19:17,582] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-2] [52] [INFO ] Updating status of bill
[2023-12-15 14:20:25,426] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 14:20:25,454] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 14:20:25,457] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-8] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:20:25,458] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-8] [55] [INFO ] Finding Bills by User
[2023-12-15 14:20:25,460] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-8] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:21:10,135] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-4] [24] [INFO ] Generating Token
[2023-12-15 14:21:10,155] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-4] [24] [INFO ] Generating Token
[2023-12-15 14:21:10,160] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-4] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:21:10,163] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-4] [55] [INFO ] Finding Bills by User
[2023-12-15 14:21:10,165] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-4] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:21:32,956] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 14:21:33,008] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 14:21:33,012] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-8] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:21:33,014] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-8] [55] [INFO ] Finding Bills by User
[2023-12-15 14:21:33,016] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-8] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:23:03,046] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-5] [24] [INFO ] Generating Token
[2023-12-15 14:23:03,063] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-5] [24] [INFO ] Generating Token
[2023-12-15 14:23:03,066] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-5] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:23:03,069] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-5] [55] [INFO ] Finding Bills by User
[2023-12-15 14:23:03,071] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-5] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:23:03,084] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-7] [24] [INFO ] Generating Token
[2023-12-15 14:23:03,094] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-7] [24] [INFO ] Generating Token
[2023-12-15 14:23:03,100] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-7] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:23:03,102] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-7] [55] [INFO ] Finding Bills by User
[2023-12-15 14:23:03,106] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-7] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:23:11,727] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 14:23:11,762] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 14:23:11,765] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-2] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:23:11,769] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-2] [55] [INFO ] Finding Bills by User
[2023-12-15 14:23:11,774] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-2] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:23:15,962] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-4] [24] [INFO ] Generating Token
[2023-12-15 14:23:15,983] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-4] [24] [INFO ] Generating Token
[2023-12-15 14:23:15,986] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-4] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:23:15,988] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-4] [55] [INFO ] Finding Bills by User
[2023-12-15 14:23:15,990] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-4] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:24:10,845] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-9] [24] [INFO ] Generating Token
[2023-12-15 14:24:10,862] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-9] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.io.DecodingException: Illegal base64url character: ' '
	at io.jsonwebtoken.io.Base64.ctoi(Base64.java:221)
	at io.jsonwebtoken.io.Base64.decodeFast(Base64.java:270)
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:36)
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:23)
	at io.jsonwebtoken.io.ExceptionPropagatingDecoder.decode(ExceptionPropagatingDecoder.java:36)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:288)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.MiniSplitwise.config.JwtService.extractAllClaims(JwtService.java:48)
	at com.example.MiniSplitwise.config.JwtService.extractClaim(JwtService.java:52)
	at com.example.MiniSplitwise.config.JwtService.extractCollegeEmail(JwtService.java:25)
	at com.example.MiniSplitwise.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2023-12-15 14:24:26,983] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-10] [24] [INFO ] Generating Token
[2023-12-15 14:24:27,020] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-10] [24] [INFO ] Generating Token
[2023-12-15 14:24:27,024] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-10] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:24:27,028] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-10] [55] [INFO ] Finding Bills by User
[2023-12-15 14:24:27,030] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-10] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:25:53,175] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-6] [34] [INFO ] Adding personal bill
[2023-12-15 14:25:53,179] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-6] [25] [INFO ] Adding personal bills
[2023-12-15 14:29:31,013] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-1] [24] [INFO ] Generating Token
[2023-12-15 14:29:31,097] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-1] [24] [INFO ] Generating Token
[2023-12-15 14:29:31,105] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-1] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:29:31,119] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-1] [55] [INFO ] Finding Bills by User
[2023-12-15 14:29:31,124] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-1] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:29:36,198] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-4] [24] [INFO ] Generating Token
[2023-12-15 14:29:36,234] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-4] [24] [INFO ] Generating Token
[2023-12-15 14:29:36,239] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-4] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:29:36,247] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-4] [68] [INFO ] Updating user by id
[2023-12-15 14:29:36,248] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-4] [52] [INFO ] Updating status of bill
[2023-12-15 14:29:56,937] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-5] [24] [INFO ] Generating Token
[2023-12-15 14:29:56,971] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-5] [24] [INFO ] Generating Token
[2023-12-15 14:29:56,974] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-5] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:29:56,976] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-5] [55] [INFO ] Finding Bills by User
[2023-12-15 14:29:56,984] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-5] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:30:01,559] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 14:30:01,606] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 14:30:01,613] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-8] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:30:01,619] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-8] [55] [INFO ] Finding Bills by User
[2023-12-15 14:30:01,624] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-8] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:30:01,652] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-9] [24] [INFO ] Generating Token
[2023-12-15 14:30:01,664] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-9] [24] [INFO ] Generating Token
[2023-12-15 14:30:01,668] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-9] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:30:01,670] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-9] [55] [INFO ] Finding Bills by User
[2023-12-15 14:30:01,671] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-9] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:30:15,803] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 14:30:15,834] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 14:30:15,836] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-2] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:30:15,838] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-2] [55] [INFO ] Finding Bills by User
[2023-12-15 14:30:15,840] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-2] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:31:09,796] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-4] [24] [INFO ] Generating Token
[2023-12-15 14:31:09,841] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-4] [24] [INFO ] Generating Token
[2023-12-15 14:31:09,847] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-4] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:31:09,856] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-4] [68] [INFO ] Updating user by id
[2023-12-15 14:31:09,861] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-4] [52] [INFO ] Updating status of bill
[2023-12-15 14:31:18,096] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-5] [24] [INFO ] Generating Token
[2023-12-15 14:31:18,111] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-5] [24] [INFO ] Generating Token
[2023-12-15 14:31:18,114] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-5] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:31:18,124] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-5] [55] [INFO ] Finding Bills by User
[2023-12-15 14:31:18,129] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-5] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:31:18,165] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-7] [24] [INFO ] Generating Token
[2023-12-15 14:31:18,176] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-7] [24] [INFO ] Generating Token
[2023-12-15 14:31:18,183] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-7] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:31:18,187] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-7] [55] [INFO ] Finding Bills by User
[2023-12-15 14:31:18,189] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-7] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:32:11,979] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-1] [24] [INFO ] Generating Token
[2023-12-15 14:32:12,014] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-1] [24] [INFO ] Generating Token
[2023-12-15 14:32:12,017] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-1] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:32:12,018] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-1] [55] [INFO ] Finding Bills by User
[2023-12-15 14:32:12,020] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-1] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:32:18,832] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 14:32:18,874] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 14:32:18,878] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-2] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:32:18,881] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-2] [68] [INFO ] Updating user by id
[2023-12-15 14:32:18,882] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-2] [52] [INFO ] Updating status of bill
[2023-12-15 14:32:23,348] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-6] [24] [INFO ] Generating Token
[2023-12-15 14:32:23,355] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-6] [24] [INFO ] Generating Token
[2023-12-15 14:32:23,359] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-6] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:32:23,362] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-6] [68] [INFO ] Updating user by id
[2023-12-15 14:32:23,367] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-6] [52] [INFO ] Updating status of bill
[2023-12-15 14:34:48,997] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 14:34:49,034] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 14:34:49,040] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-8] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:34:49,049] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-8] [55] [INFO ] Finding Bills by User
[2023-12-15 14:34:49,054] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-8] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:34:49,076] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-1] [24] [INFO ] Generating Token
[2023-12-15 14:34:49,079] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-1] [24] [INFO ] Generating Token
[2023-12-15 14:34:49,081] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-1] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:34:49,086] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-1] [76] [INFO ] Getting total expense for an id
[2023-12-15 14:34:49,088] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-1] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:35:11,934] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 14:35:11,983] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 14:35:11,985] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-2] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:35:11,988] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-2] [55] [INFO ] Finding Bills by User
[2023-12-15 14:35:11,990] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-2] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:35:12,036] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-3] [24] [INFO ] Generating Token
[2023-12-15 14:35:12,039] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-3] [24] [INFO ] Generating Token
[2023-12-15 14:35:12,041] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-3] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:35:12,042] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-3] [76] [INFO ] Getting total expense for an id
[2023-12-15 14:35:12,043] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-3] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:36:00,069] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-6] [24] [INFO ] Generating Token
[2023-12-15 14:36:00,104] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-6] [24] [INFO ] Generating Token
[2023-12-15 14:36:00,107] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-6] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:36:00,109] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-6] [55] [INFO ] Finding Bills by User
[2023-12-15 14:36:00,110] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-6] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:36:00,117] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-5] [24] [INFO ] Generating Token
[2023-12-15 14:36:00,120] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-5] [24] [INFO ] Generating Token
[2023-12-15 14:36:00,121] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-5] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:36:00,122] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-5] [76] [INFO ] Getting total expense for an id
[2023-12-15 14:36:00,124] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-5] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:36:08,192] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 14:36:08,206] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 14:36:08,210] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-8] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:36:08,212] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-8] [55] [INFO ] Finding Bills by User
[2023-12-15 14:36:08,214] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-8] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:36:08,221] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-9] [24] [INFO ] Generating Token
[2023-12-15 14:36:08,224] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-9] [24] [INFO ] Generating Token
[2023-12-15 14:36:08,226] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-9] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:36:08,227] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-9] [76] [INFO ] Getting total expense for an id
[2023-12-15 14:36:08,228] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-9] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:36:15,358] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-10] [24] [INFO ] Generating Token
[2023-12-15 14:36:15,380] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-10] [24] [INFO ] Generating Token
[2023-12-15 14:36:15,385] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-10] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:36:15,389] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-10] [55] [INFO ] Finding Bills by User
[2023-12-15 14:36:15,392] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-10] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:36:15,401] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 14:36:15,403] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 14:36:15,405] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-2] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:36:15,406] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-2] [76] [INFO ] Getting total expense for an id
[2023-12-15 14:36:15,427] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-2] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:36:23,243] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-4] [24] [INFO ] Generating Token
[2023-12-15 14:36:23,261] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-4] [24] [INFO ] Generating Token
[2023-12-15 14:36:23,264] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-4] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:36:23,267] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-4] [55] [INFO ] Finding Bills by User
[2023-12-15 14:36:23,270] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-4] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:36:23,289] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-6] [24] [INFO ] Generating Token
[2023-12-15 14:36:23,292] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-6] [24] [INFO ] Generating Token
[2023-12-15 14:36:23,294] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-6] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:36:23,295] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-6] [76] [INFO ] Getting total expense for an id
[2023-12-15 14:36:23,297] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-6] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:37:42,641] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-7] [24] [INFO ] Generating Token
[2023-12-15 14:37:42,670] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-7] [24] [INFO ] Generating Token
[2023-12-15 14:37:42,673] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-7] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:37:42,675] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-7] [55] [INFO ] Finding Bills by User
[2023-12-15 14:37:42,678] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-7] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:37:42,691] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 14:37:42,695] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 14:37:42,699] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-8] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:37:42,701] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-8] [76] [INFO ] Getting total expense for an id
[2023-12-15 14:37:42,705] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-8] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:37:50,235] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-1] [24] [INFO ] Generating Token
[2023-12-15 14:37:50,246] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-1] [24] [INFO ] Generating Token
[2023-12-15 14:37:50,255] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-1] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:37:50,257] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-1] [55] [INFO ] Finding Bills by User
[2023-12-15 14:37:50,260] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-1] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:37:50,270] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-10] [24] [INFO ] Generating Token
[2023-12-15 14:37:50,275] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-10] [24] [INFO ] Generating Token
[2023-12-15 14:37:50,279] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-10] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:37:50,281] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-10] [76] [INFO ] Getting total expense for an id
[2023-12-15 14:37:50,284] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-10] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:37:57,509] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-3] [24] [INFO ] Generating Token
[2023-12-15 14:37:57,525] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-3] [24] [INFO ] Generating Token
[2023-12-15 14:37:57,527] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-3] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:37:57,528] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-3] [55] [INFO ] Finding Bills by User
[2023-12-15 14:37:57,530] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-3] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:37:57,548] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-4] [24] [INFO ] Generating Token
[2023-12-15 14:37:57,551] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-4] [24] [INFO ] Generating Token
[2023-12-15 14:37:57,553] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-4] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:37:57,555] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-4] [76] [INFO ] Getting total expense for an id
[2023-12-15 14:37:57,556] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-4] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:38:16,727] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-5] [24] [INFO ] Generating Token
[2023-12-15 14:38:16,745] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-5] [24] [INFO ] Generating Token
[2023-12-15 14:38:16,750] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-5] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:38:16,755] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-5] [55] [INFO ] Finding Bills by User
[2023-12-15 14:38:16,757] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-5] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:38:16,777] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-7] [24] [INFO ] Generating Token
[2023-12-15 14:38:16,780] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-7] [24] [INFO ] Generating Token
[2023-12-15 14:38:16,783] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-7] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:38:16,784] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-7] [76] [INFO ] Getting total expense for an id
[2023-12-15 14:38:16,785] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-7] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:39:13,339] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-9] [24] [INFO ] Generating Token
[2023-12-15 14:39:13,364] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-9] [24] [INFO ] Generating Token
[2023-12-15 14:39:13,367] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-9] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:39:13,369] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-9] [55] [INFO ] Finding Bills by User
[2023-12-15 14:39:13,371] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-9] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:39:13,380] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-1] [24] [INFO ] Generating Token
[2023-12-15 14:39:13,382] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-1] [24] [INFO ] Generating Token
[2023-12-15 14:39:13,385] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-1] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:39:13,387] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-1] [76] [INFO ] Getting total expense for an id
[2023-12-15 14:39:13,388] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-1] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:39:25,073] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 14:39:25,098] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 14:39:25,100] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-2] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:39:25,102] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-2] [55] [INFO ] Finding Bills by User
[2023-12-15 14:39:25,103] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-2] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:39:25,111] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-3] [24] [INFO ] Generating Token
[2023-12-15 14:39:25,114] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-3] [24] [INFO ] Generating Token
[2023-12-15 14:39:25,117] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-3] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:39:25,122] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-3] [76] [INFO ] Getting total expense for an id
[2023-12-15 14:39:25,124] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-3] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:39:57,375] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-6] [24] [INFO ] Generating Token
[2023-12-15 14:39:57,404] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-6] [24] [INFO ] Generating Token
[2023-12-15 14:39:57,407] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-6] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:39:57,410] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-6] [55] [INFO ] Finding Bills by User
[2023-12-15 14:39:57,411] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-6] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:39:57,432] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-5] [24] [INFO ] Generating Token
[2023-12-15 14:39:57,435] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-5] [24] [INFO ] Generating Token
[2023-12-15 14:39:57,439] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-5] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:39:57,441] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-5] [76] [INFO ] Getting total expense for an id
[2023-12-15 14:39:57,444] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-5] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:40:16,114] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 14:40:16,131] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-8] [24] [INFO ] Generating Token
[2023-12-15 14:40:16,134] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-8] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:40:16,138] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-8] [55] [INFO ] Finding Bills by User
[2023-12-15 14:40:16,141] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-8] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:40:16,153] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-9] [24] [INFO ] Generating Token
[2023-12-15 14:40:16,157] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-9] [24] [INFO ] Generating Token
[2023-12-15 14:40:16,160] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-9] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:40:16,161] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-9] [76] [INFO ] Getting total expense for an id
[2023-12-15 14:40:16,162] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-9] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:42:38,940] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-10] [24] [INFO ] Generating Token
[2023-12-15 14:42:38,972] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-10] [24] [INFO ] Generating Token
[2023-12-15 14:42:38,976] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-10] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:42:38,980] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-10] [55] [INFO ] Finding Bills by User
[2023-12-15 14:42:38,982] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-10] [37] [INFO ] Finding bills by user ID
[2023-12-15 14:42:38,997] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 14:42:39,002] [com.example.MiniSplitwise.config.JwtService] [http-nio-8081-exec-2] [24] [INFO ] Generating Token
[2023-12-15 14:42:39,005] [com.example.MiniSplitwise.config.JwtAuthenticationFilter] [http-nio-8081-exec-2] [44] [INFO ] JWT - Token is valid. Creating auth token
[2023-12-15 14:42:39,010] [com.example.MiniSplitwise.controller.PersonalBillController] [http-nio-8081-exec-2] [76] [INFO ] Getting total expense for an id
[2023-12-15 14:42:39,013] [com.example.MiniSplitwise.service.PersonalBillService] [http-nio-8081-exec-2] [37] [INFO ] Finding bills by user ID
